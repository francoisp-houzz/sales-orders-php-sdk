<?php 
# Code generated by sdkgen
# Generated on 2020-07-21 17:12:54.85125721 +0000 UTC using container gcr.io/repcore-prod/sdkgen:latest
# DO NOT EDIT!

namespace Vendasta\SalesOrders\V1\internal;

interface CustomerSalesOrdersClientInterface
{ 
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::CreateSalesOrder
     * @param \Salesorders\V1\CustomerCreateSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\CustomerCreateSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function CreateSalesOrder(\Salesorders\V1\CustomerCreateSalesOrderRequest $req, array $options = []): \Salesorders\V1\CustomerCreateSalesOrderResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::ApproveSalesOrder
     * @param \Salesorders\V1\CustomerApproveSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\CustomerApproveSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ApproveSalesOrder(\Salesorders\V1\CustomerApproveSalesOrderRequest $req, array $options = []): \Salesorders\V1\CustomerApproveSalesOrderResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::UpdateAnswers
     * @param \Salesorders\V1\UpdateAnswersRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\UpdateAnswersResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function UpdateAnswers(\Salesorders\V1\UpdateAnswersRequest $req, array $options = []): \Salesorders\V1\UpdateAnswersResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::GetSalesOrder
     * @param \Salesorders\V1\GetSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\GetSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetSalesOrder(\Salesorders\V1\GetSalesOrderRequest $req, array $options = []): \Salesorders\V1\GetSalesOrderResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::ListSalesOrder
     * @param \Salesorders\V1\ListCustomerSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\ListSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListSalesOrder(\Salesorders\V1\ListCustomerSalesOrderRequest $req, array $options = []): \Salesorders\V1\ListSalesOrderResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::GetUsers
     * @param \Salesorders\V1\GetUsersRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\GetUsersResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetUsers(\Salesorders\V1\GetUsersRequest $req, array $options = []): \Salesorders\V1\GetUsersResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::InitiateOrderExport
     * @param \Salesorders\V1\InitiateOrderExportRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\InitiateOrderExportResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function InitiateOrderExport(\Salesorders\V1\InitiateOrderExportRequest $req, array $options = []): \Salesorders\V1\InitiateOrderExportResponse;
    
    /**
     * Auth wrapper for \SalesOrders\V1\CustomerSalesOrdersClient::CreateForPartnerApproval
     * @param \Salesorders\V1\CreateForPartnerApprovalRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\CreateForPartnerApprovalResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function CreateForPartnerApproval(\Salesorders\V1\CreateForPartnerApprovalRequest $req, array $options = []): \Salesorders\V1\CreateForPartnerApprovalResponse;
    
}
