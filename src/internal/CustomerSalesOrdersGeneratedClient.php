<?php 
# Code generated by sdkgen
# Generated on 2020-07-23 21:31:53.688983585 +0000 UTC using container gcr.io/repcore-prod/sdkgen:latest
# DO NOT EDIT!
namespace Vendasta\SalesOrders\V1\internal;

use Vendasta\SalesOrders\V1\Config;

class CustomerSalesOrdersGeneratedClient
{
    private $transport;
    
    /**
     * CustomerSalesOrdersGeneratedClient constructor.
     * @param string $env one of \Vendasta\Vax\Environment::<Env>
     * @param float $default_timeout
     */
    public function __construct(string $env, float $default_timeout = 10000)
    {
        $this->transport = $this->getTransportClient($env, $default_timeout);
    }

    /**
     * @param string $env one of \Vendasta\Vax\Environment::<Env>
     * @param float $default_timeout
     * @return CustomerSalesOrdersClientInterface
     */
    private function getTransportClient(string $env, float $default_timeout = 10000): CustomerSalesOrdersClientInterface
    {
        $config = $this->getEnvConfig($env);

        if (class_exists('Grpc\ChannelCredentials', true)) {
            return new CustomerSalesOrdersGRPCClient(
                $config['host'],
                $config['scope'],
                $config['secure'],
                $default_timeout
            );
        } else {
            return new CustomerSalesOrdersHTTPClient(
                $config['host'],
                $config['scope'],
                $config['secure'],
                $default_timeout
            );
        }
    }

    /**
     * @param string $env one of \Vendasta\Vax\Environment::<Env>
     * @return array
     */
    private function getEnvConfig(string $env): array {
        return Config::ENVIRONMENT_PARAMS[$env];
    }
    
    /**
     * @param \Salesorders\V1\CustomerCreateSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\CustomerCreateSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function CreateSalesOrder(\Salesorders\V1\CustomerCreateSalesOrderRequest $req, array $options = []): \Salesorders\V1\CustomerCreateSalesOrderResponse
    {
        return $this->transport->CreateSalesOrder($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\CustomerApproveSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\CustomerApproveSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ApproveSalesOrder(\Salesorders\V1\CustomerApproveSalesOrderRequest $req, array $options = []): \Salesorders\V1\CustomerApproveSalesOrderResponse
    {
        return $this->transport->ApproveSalesOrder($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\UpdateAnswersRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\UpdateAnswersResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function UpdateAnswers(\Salesorders\V1\UpdateAnswersRequest $req, array $options = []): \Salesorders\V1\UpdateAnswersResponse
    {
        return $this->transport->UpdateAnswers($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\GetSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\GetSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetSalesOrder(\Salesorders\V1\GetSalesOrderRequest $req, array $options = []): \Salesorders\V1\GetSalesOrderResponse
    {
        return $this->transport->GetSalesOrder($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\ListCustomerSalesOrderRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\ListSalesOrderResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListSalesOrder(\Salesorders\V1\ListCustomerSalesOrderRequest $req, array $options = []): \Salesorders\V1\ListSalesOrderResponse
    {
        return $this->transport->ListSalesOrder($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\GetUsersRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\GetUsersResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetUsers(\Salesorders\V1\GetUsersRequest $req, array $options = []): \Salesorders\V1\GetUsersResponse
    {
        return $this->transport->GetUsers($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\InitiateOrderExportRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\InitiateOrderExportResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function InitiateOrderExport(\Salesorders\V1\InitiateOrderExportRequest $req, array $options = []): \Salesorders\V1\InitiateOrderExportResponse
    {
        return $this->transport->InitiateOrderExport($req, $options);
    }
    
    /**
     * @param \Salesorders\V1\CreateForPartnerApprovalRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Salesorders\V1\CreateForPartnerApprovalResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function CreateForPartnerApproval(\Salesorders\V1\CreateForPartnerApprovalRequest $req, array $options = []): \Salesorders\V1\CreateForPartnerApprovalResponse
    {
        return $this->transport->CreateForPartnerApproval($req, $options);
    }
    
}
