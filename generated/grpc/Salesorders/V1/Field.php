<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sales_orders/v1/sales_orders.proto

namespace Salesorders\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Represents an information field pertaining to a product
 * </pre>
 *
 * Protobuf type <code>salesorders.v1.Field</code>
 */
class Field extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Unique identifier of a custom or common field
     * </pre>
     *
     * <code>string field_id = 1;</code>
     */
    private $field_id = '';
    /**
     * <pre>
     * Response related to the question of the field_id
     * </pre>
     *
     * <code>string answer = 2;</code>
     */
    private $answer = '';
    /**
     * <pre>
     * The type of field
     * </pre>
     *
     * <code>.salesorders.v1.FieldType field_type = 3;</code>
     */
    private $field_type = 0;
    /**
     * <pre>
     * The question for the custom or common field
     * </pre>
     *
     * <code>string label = 4;</code>
     */
    private $label = '';
    /**
     * <pre>
     * The description of the field
     * </pre>
     *
     * <code>string description = 5;</code>
     */
    private $description = '';
    /**
     * <pre>
     * For textbox fields, this string will be displayed in front of the textbox
     * </pre>
     *
     * <code>string prefix = 6;</code>
     */
    private $prefix = '';
    /**
     * <pre>
     * For textbox fields, this string will be displayed behind the textbox
     * </pre>
     *
     * <code>string suffix = 7;</code>
     */
    private $suffix = '';
    /**
     * <pre>
     * A regex string used to validate a fields answer
     * </pre>
     *
     * <code>string regex_validator = 8;</code>
     */
    private $regex_validator = '';
    /**
     * <pre>
     * The error message displayed if the regex_validator does not match the answer
     * </pre>
     *
     * <code>string regex_error_message = 9;</code>
     */
    private $regex_error_message = '';

    public function __construct() {
        \GPBMetadata\SalesOrders\V1\SalesOrders::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Unique identifier of a custom or common field
     * </pre>
     *
     * <code>string field_id = 1;</code>
     */
    public function getFieldId()
    {
        return $this->field_id;
    }

    /**
     * <pre>
     * Unique identifier of a custom or common field
     * </pre>
     *
     * <code>string field_id = 1;</code>
     */
    public function setFieldId($var)
    {
        GPBUtil::checkString($var, True);
        $this->field_id = $var;
    }

    /**
     * <pre>
     * Response related to the question of the field_id
     * </pre>
     *
     * <code>string answer = 2;</code>
     */
    public function getAnswer()
    {
        return $this->answer;
    }

    /**
     * <pre>
     * Response related to the question of the field_id
     * </pre>
     *
     * <code>string answer = 2;</code>
     */
    public function setAnswer($var)
    {
        GPBUtil::checkString($var, True);
        $this->answer = $var;
    }

    /**
     * <pre>
     * The type of field
     * </pre>
     *
     * <code>.salesorders.v1.FieldType field_type = 3;</code>
     */
    public function getFieldType()
    {
        return $this->field_type;
    }

    /**
     * <pre>
     * The type of field
     * </pre>
     *
     * <code>.salesorders.v1.FieldType field_type = 3;</code>
     */
    public function setFieldType($var)
    {
        GPBUtil::checkEnum($var, \Salesorders\V1\FieldType::class);
        $this->field_type = $var;
    }

    /**
     * <pre>
     * The question for the custom or common field
     * </pre>
     *
     * <code>string label = 4;</code>
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * <pre>
     * The question for the custom or common field
     * </pre>
     *
     * <code>string label = 4;</code>
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;
    }

    /**
     * <pre>
     * The description of the field
     * </pre>
     *
     * <code>string description = 5;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * The description of the field
     * </pre>
     *
     * <code>string description = 5;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

    /**
     * <pre>
     * For textbox fields, this string will be displayed in front of the textbox
     * </pre>
     *
     * <code>string prefix = 6;</code>
     */
    public function getPrefix()
    {
        return $this->prefix;
    }

    /**
     * <pre>
     * For textbox fields, this string will be displayed in front of the textbox
     * </pre>
     *
     * <code>string prefix = 6;</code>
     */
    public function setPrefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->prefix = $var;
    }

    /**
     * <pre>
     * For textbox fields, this string will be displayed behind the textbox
     * </pre>
     *
     * <code>string suffix = 7;</code>
     */
    public function getSuffix()
    {
        return $this->suffix;
    }

    /**
     * <pre>
     * For textbox fields, this string will be displayed behind the textbox
     * </pre>
     *
     * <code>string suffix = 7;</code>
     */
    public function setSuffix($var)
    {
        GPBUtil::checkString($var, True);
        $this->suffix = $var;
    }

    /**
     * <pre>
     * A regex string used to validate a fields answer
     * </pre>
     *
     * <code>string regex_validator = 8;</code>
     */
    public function getRegexValidator()
    {
        return $this->regex_validator;
    }

    /**
     * <pre>
     * A regex string used to validate a fields answer
     * </pre>
     *
     * <code>string regex_validator = 8;</code>
     */
    public function setRegexValidator($var)
    {
        GPBUtil::checkString($var, True);
        $this->regex_validator = $var;
    }

    /**
     * <pre>
     * The error message displayed if the regex_validator does not match the answer
     * </pre>
     *
     * <code>string regex_error_message = 9;</code>
     */
    public function getRegexErrorMessage()
    {
        return $this->regex_error_message;
    }

    /**
     * <pre>
     * The error message displayed if the regex_validator does not match the answer
     * </pre>
     *
     * <code>string regex_error_message = 9;</code>
     */
    public function setRegexErrorMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->regex_error_message = $var;
    }

}

