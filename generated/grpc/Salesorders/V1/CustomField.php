<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sales_orders/v1/sales_orders.proto

namespace Salesorders\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Represents the answer(s) to a custom field that is unique to a product
 * </pre>
 *
 * Protobuf type <code>salesorders.v1.CustomField</code>
 */
class CustomField extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * List of custom fields for a given product
     * </pre>
     *
     * <code>repeated .salesorders.v1.Field fields = 1;</code>
     */
    private $fields;
    /**
     * <pre>
     * Unique identifier of a single product that the custom questions belong to, and will not be provided if the custom field belongs to an addon
     * </pre>
     *
     * <code>string product_id = 2;</code>
     */
    private $product_id = '';
    /**
     * <pre>
     * Addon key of an addon that the custom questions belong to, and will not be provided if the custom field belongs to a product
     * </pre>
     *
     * <code>.salesorders.v1.AddonKey addon_key = 3;</code>
     */
    private $addon_key = null;

    public function __construct() {
        \GPBMetadata\SalesOrders\V1\SalesOrders::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * List of custom fields for a given product
     * </pre>
     *
     * <code>repeated .salesorders.v1.Field fields = 1;</code>
     */
    public function getFields()
    {
        return $this->fields;
    }

    /**
     * <pre>
     * List of custom fields for a given product
     * </pre>
     *
     * <code>repeated .salesorders.v1.Field fields = 1;</code>
     */
    public function setFields(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Salesorders\V1\Field::class);
        $this->fields = $arr;
    }

    /**
     * <pre>
     * Unique identifier of a single product that the custom questions belong to, and will not be provided if the custom field belongs to an addon
     * </pre>
     *
     * <code>string product_id = 2;</code>
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * <pre>
     * Unique identifier of a single product that the custom questions belong to, and will not be provided if the custom field belongs to an addon
     * </pre>
     *
     * <code>string product_id = 2;</code>
     */
    public function setProductId($var)
    {
        GPBUtil::checkString($var, True);
        $this->product_id = $var;
    }

    /**
     * <pre>
     * Addon key of an addon that the custom questions belong to, and will not be provided if the custom field belongs to a product
     * </pre>
     *
     * <code>.salesorders.v1.AddonKey addon_key = 3;</code>
     */
    public function getAddonKey()
    {
        return $this->addon_key;
    }

    /**
     * <pre>
     * Addon key of an addon that the custom questions belong to, and will not be provided if the custom field belongs to a product
     * </pre>
     *
     * <code>.salesorders.v1.AddonKey addon_key = 3;</code>
     */
    public function setAddonKey(&$var)
    {
        GPBUtil::checkMessage($var, \Salesorders\V1\AddonKey::class);
        $this->addon_key = $var;
    }

}

