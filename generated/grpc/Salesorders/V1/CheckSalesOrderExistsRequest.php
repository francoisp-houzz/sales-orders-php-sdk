<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sales_orders/v1/api.proto

namespace Salesorders\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * CheckSalesOrderExistsRequest is used to check for the existance of active sales orders
 * </pre>
 *
 * Protobuf type <code>salesorders.v1.CheckSalesOrderExistsRequest</code>
 */
class CheckSalesOrderExistsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The partner the order is being made under
     * </pre>
     *
     * <code>string partner_id = 1;</code>
     */
    private $partner_id = '';
    /**
     * <pre>
     * The business the order is being made for
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    private $business_id = '';
    /**
     * <pre>
     * A product ID that must be included in the order if provided here.
     * </pre>
     *
     * <code>string product_id = 3;</code>
     */
    private $product_id = '';
    /**
     * <pre>
     * A product edition ID that must be included in the order if provided here.
     * </pre>
     *
     * <code>string product_edition_id = 4;</code>
     */
    private $product_edition_id = '';
    /**
     * <pre>
     * The statuses the sales order check if for. If empty, check for sales order with any status.
     * </pre>
     *
     * <code>repeated .salesorders.v1.Status statuses = 5;</code>
     */
    private $statuses;

    public function __construct() {
        \GPBMetadata\SalesOrders\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The partner the order is being made under
     * </pre>
     *
     * <code>string partner_id = 1;</code>
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * <pre>
     * The partner the order is being made under
     * </pre>
     *
     * <code>string partner_id = 1;</code>
     */
    public function setPartnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_id = $var;
    }

    /**
     * <pre>
     * The business the order is being made for
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    public function getBusinessId()
    {
        return $this->business_id;
    }

    /**
     * <pre>
     * The business the order is being made for
     * </pre>
     *
     * <code>string business_id = 2;</code>
     */
    public function setBusinessId($var)
    {
        GPBUtil::checkString($var, True);
        $this->business_id = $var;
    }

    /**
     * <pre>
     * A product ID that must be included in the order if provided here.
     * </pre>
     *
     * <code>string product_id = 3;</code>
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * <pre>
     * A product ID that must be included in the order if provided here.
     * </pre>
     *
     * <code>string product_id = 3;</code>
     */
    public function setProductId($var)
    {
        GPBUtil::checkString($var, True);
        $this->product_id = $var;
    }

    /**
     * <pre>
     * A product edition ID that must be included in the order if provided here.
     * </pre>
     *
     * <code>string product_edition_id = 4;</code>
     */
    public function getProductEditionId()
    {
        return $this->product_edition_id;
    }

    /**
     * <pre>
     * A product edition ID that must be included in the order if provided here.
     * </pre>
     *
     * <code>string product_edition_id = 4;</code>
     */
    public function setProductEditionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->product_edition_id = $var;
    }

    /**
     * <pre>
     * The statuses the sales order check if for. If empty, check for sales order with any status.
     * </pre>
     *
     * <code>repeated .salesorders.v1.Status statuses = 5;</code>
     */
    public function getStatuses()
    {
        return $this->statuses;
    }

    /**
     * <pre>
     * The statuses the sales order check if for. If empty, check for sales order with any status.
     * </pre>
     *
     * <code>repeated .salesorders.v1.Status statuses = 5;</code>
     */
    public function setStatuses(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Salesorders\V1\Status::class);
        $this->statuses = $arr;
    }

}

