<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sales_orders/v1/sales_orders.proto

namespace Salesorders\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>salesorders.v1.Product</code>
 */
class Product extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Unique identifier of the product that will be activated when an order is fulfilled
     * </pre>
     *
     * <code>string product_id = 1;</code>
     */
    private $product_id = '';
    /**
     * <pre>
     * Optional unique identifier for the edition of the product that will be activated when an order if fulfilled
     * </pre>
     *
     * <code>string edition_id = 5;</code>
     */
    private $edition_id = '';
    /**
     * <pre>
     * Optional unique identifier for the parent of product that will be activated when an order is fulfilled
     * </pre>
     *
     * <code>string parent_product_id = 6;</code>
     */
    private $parent_product_id = '';
    /**
     * <pre>
     * Type of currency that will be used when the product is invoiced
     * </pre>
     *
     * <code>.sales.v1.Currency currency = 2;</code>
     */
    private $currency = 0;
    /**
     * <pre>
     * Amount of money that will be charged when the product is invoiced
     * </pre>
     *
     * <code>.sales.v1.Revenue revenue = 3;</code>
     */
    private $revenue = null;

    public function __construct() {
        \GPBMetadata\SalesOrders\V1\SalesOrders::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Unique identifier of the product that will be activated when an order is fulfilled
     * </pre>
     *
     * <code>string product_id = 1;</code>
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * <pre>
     * Unique identifier of the product that will be activated when an order is fulfilled
     * </pre>
     *
     * <code>string product_id = 1;</code>
     */
    public function setProductId($var)
    {
        GPBUtil::checkString($var, True);
        $this->product_id = $var;
    }

    /**
     * <pre>
     * Optional unique identifier for the edition of the product that will be activated when an order if fulfilled
     * </pre>
     *
     * <code>string edition_id = 5;</code>
     */
    public function getEditionId()
    {
        return $this->edition_id;
    }

    /**
     * <pre>
     * Optional unique identifier for the edition of the product that will be activated when an order if fulfilled
     * </pre>
     *
     * <code>string edition_id = 5;</code>
     */
    public function setEditionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->edition_id = $var;
    }

    /**
     * <pre>
     * Optional unique identifier for the parent of product that will be activated when an order is fulfilled
     * </pre>
     *
     * <code>string parent_product_id = 6;</code>
     */
    public function getParentProductId()
    {
        return $this->parent_product_id;
    }

    /**
     * <pre>
     * Optional unique identifier for the parent of product that will be activated when an order is fulfilled
     * </pre>
     *
     * <code>string parent_product_id = 6;</code>
     */
    public function setParentProductId($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_product_id = $var;
    }

    /**
     * <pre>
     * Type of currency that will be used when the product is invoiced
     * </pre>
     *
     * <code>.sales.v1.Currency currency = 2;</code>
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * <pre>
     * Type of currency that will be used when the product is invoiced
     * </pre>
     *
     * <code>.sales.v1.Currency currency = 2;</code>
     */
    public function setCurrency($var)
    {
        GPBUtil::checkEnum($var, \Sales\V1\Currency::class);
        $this->currency = $var;
    }

    /**
     * <pre>
     * Amount of money that will be charged when the product is invoiced
     * </pre>
     *
     * <code>.sales.v1.Revenue revenue = 3;</code>
     */
    public function getRevenue()
    {
        return $this->revenue;
    }

    /**
     * <pre>
     * Amount of money that will be charged when the product is invoiced
     * </pre>
     *
     * <code>.sales.v1.Revenue revenue = 3;</code>
     */
    public function setRevenue(&$var)
    {
        GPBUtil::checkMessage($var, \Sales\V1\Revenue::class);
        $this->revenue = $var;
    }

}

